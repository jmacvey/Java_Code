Addition and Removal of minimum Binary heaps may be done in a variety of ways. 

	 Addition is fairly simple:
		- Start at end of array
		- Iterate up the heap checkings parent position.  If parent is less than child, swap the parent with the child.
		- Otherwise we're done.

	 Removal is a bit more complex:
		- I laid it out keeping in mind basic structure of algorithms like MergeSort.  I let HeapSwap do the heavy duty work.
		- Many cases need to be checked.  Best to just look at the code to see for yourself.

Of course, we need a way to test the maintenance of the heap properties after the heap has been added to or removed from.  This is done through another recursive algorithm.  It's not much, but it brought me back to days of coding Binary Search Trees.  Same concept, but slight variation.

Any questions, e-mail.

